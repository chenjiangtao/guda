package net.zoneland.ums.common.dal;

import java.util.List;
import java.util.Map;

import net.zoneland.ums.common.dal.dataobject.UmsGatewayRule;
import net.zoneland.ums.common.util.annotation.Log;

import org.springframework.cache.annotation.CacheEvict;
import org.springframework.cache.annotation.Cacheable;

public interface UmsGatewayRuleMapper {

    @Log(name = "网关规则配置", comments = "删除网关规则")
    @CacheEvict(value = "defaultCache", allEntries = true)
    int deleteByPrimaryKey(String id);

    @Log(name = "网关规则配置", comments = "新增网关规则")
    @CacheEvict(value = "defaultCache", allEntries = true)
    int insert(UmsGatewayRule record);

    UmsGatewayRule selectByPrimaryKey(String id);

    @Log(name = "网关规则配置", comments = "修改网关规则")
    @CacheEvict(value = "defaultCache", allEntries = true)
    int updateByPrimaryKeySelective(UmsGatewayRule record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table UMS_GATEWAY_RULE
     *
     * @mbggenerated
     */
    @Log(name = "网关规则配置", comments = "修改网关规则")
    @CacheEvict(value = "defaultCache", allEntries = true)
    int updateByPrimaryKey(UmsGatewayRule record);

    /**
     *获得所有网关规则信息
     *
     * @return
     */
    @Cacheable(value = "defaultCache")
    List<UmsGatewayRule> selectAll();

    /**
     *获得固定网关的网关规则个数
     *
     * @param gatewayId
     * @return
     */
    int exitGatewayRule(String gatewayId);

    /**
     *分页查询网关规则
     *
     * @param map
     * @return
     */
    List<UmsGatewayRule> pageAll(Map<String, Object> map);

    /**
     * 获得总共的网关规则个数
     *
     * @return
     */
    int selectCount();

    /**
     *通过网关ID删除规则
     *
     * @param gatewayId
     * @return
     */
    @Log(name = "网关规则配置", comments = "删除网关同时删除网关规则")
    @CacheEvict(value = "defaultCache", allEntries = true)
    int deleteByGatewayId(String gatewayId);

}