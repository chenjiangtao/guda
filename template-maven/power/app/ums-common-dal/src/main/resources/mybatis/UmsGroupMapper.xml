<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zoneland.ums.common.dal.UmsGroupMapper" >
  <resultMap id="BaseResultMap" type="net.zoneland.ums.common.dal.dataobject.UmsGroup" >
    <id column="ID" property="id" jdbcType="CHAR" />
    <result column="GROUP_NAME" property="groupName" jdbcType="CHAR" />
    <result column="USER_ID" property="userId" jdbcType="CHAR" />
    <result column="GMT_CREATED" property="gmtCreated" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, GROUP_NAME, USER_ID, GMT_CREATED
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from UMS_GROUP
    where ID = #{id,jdbcType=CHAR}
  </select>
  <!-- 自定义方法：根据用户查询群组 -->
  <select id="getGroupsByUserId" resultMap="BaseResultMap" parameterType="java.lang.String">
	select
    <include refid="Base_Column_List" />
    from UMS_GROUP
    where USER_ID=#{userId,jdbcType=CHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from UMS_GROUP
    where ID = #{id,jdbcType=CHAR}
  </delete>
  <insert id="insert" parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroup" >
    insert into UMS_GROUP (ID, GROUP_NAME, USER_ID,
      GMT_CREATED)
    values (#{id,jdbcType=CHAR}, #{groupName,jdbcType=CHAR}, #{userId,jdbcType=CHAR},
      #{gmtCreated,jdbcType=TIMESTAMP})
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroup" >

    update UMS_GROUP
    <set >
      <if test="groupName != null" >
        GROUP_NAME = #{groupName,jdbcType=CHAR},
      </if>
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=CHAR},
      </if>
      <if test="gmtCreated != null" >
        GMT_CREATED = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroup" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UMS_GROUP
    set GROUP_NAME = #{groupName,jdbcType=CHAR},
      USER_ID = #{userId,jdbcType=CHAR},
      GMT_CREATED = #{gmtCreated,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=CHAR}
  </update>

    <select id="getGroupsByGroupName" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
    <include refid="Base_Column_List" />
    from UMS_GROUP
    where GROUP_NAME  like '%'||#{groupName}||'%'
    AND USER_ID = #{userId,jdbcType=CHAR}
    limit 50 
  </select>


   <select id="findGroupByNameAndUserId" resultMap="BaseResultMap" parameterType="java.util.Map">
    select
    <include refid="Base_Column_List" />
    from UMS_GROUP
    where GROUP_NAME = #{groupName} AND USER_ID = #{userId}
  </select>


  <select id="searchAllNum" parameterType="net.zoneland.ums.common.dal.bo.UmsGroupBo" resultType="java.lang.Integer">
   		 SELECT count(ID) from UMS_GROUP
			<where>
			     1=1
			     <if test="userId != null">
			         AND USER_ID = #{userId}
			     </if>
			     <if test="groupName != null">
			         AND GROUP_NAME  like '%'||#{groupName}||'%'
			     </if>
			</where>
   </select>


  <select id="searchMyGroupByPage" parameterType="net.zoneland.ums.common.dal.util.PageSearch" resultMap="BaseResultMap">
  	 SELECT  <include refid="Base_Column_List"/>
    		 from UMS_GROUP
			<where>
			    1=1
				<if test="searchObj.userId != null">
			         AND USER_ID = #{searchObj.userId}
			     </if>
			     <if test="searchObj.groupName != null">
			         AND GROUP_NAME  like '%'||#{searchObj.groupName}||'%'
			     </if>
	       </where>
	        <if test="searchObj.orderBy != null">
	       		order by ${searchObj.orderBy}   ${searchObj.orderbyType}
	       </if>
		 limit #{recordFirst} , 10
   </select>


</mapper>