<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.zoneland.ums.common.dal.UmsGroupUserRelMapper">
	<resultMap id="BaseResultMap"
		type="net.zoneland.ums.common.dal.dataobject.UmsGroupUserRel">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		<id column="ID" property="id" jdbcType="CHAR" />
		<result column="GROUP_ID" property="groupId" jdbcType="CHAR" />
		<result column="USER_DESC" property="userDesc" jdbcType="CHAR" />
		<result column="COMMENTS" property="comments" jdbcType="CHAR" />
		<result column="GMT_CREATED" property="gmtCreated" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		ID, GROUP_ID, USER_DESC, COMMENTS, GMT_CREATED
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		<!-- WARNING - @mbggenerated This element is automatically generated by
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		from UMS_GROUP_USER_REL
		where ID = #{id,jdbcType=CHAR}
	</select>

	<update id="updateByPrimaryKeySelective" parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroupUserRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UMS_GROUP_USER_REL
    <set >
      <if test="groupId != null" >
        GROUP_ID = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="userDesc != null" >
        USER_DESC = #{userDesc,jdbcType=VARCHAR},
      </if>
      <if test="comments != null" >
        COMMENTS = #{comments,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreated != null" >
        GMT_CREATED = #{gmtCreated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ID = #{id,jdbcType=CHAR}
  </update>

   <update id="updateByPrimaryKey" parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroupUserRel" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update UMS_GROUP_USER_REL
    set GROUP_ID = #{groupId,jdbcType=VARCHAR},
      USER_DESC = #{userDesc,jdbcType=VARCHAR},
      COMMENTS = #{comments,jdbcType=VARCHAR},
      GMT_CREATED = #{gmtCreated,jdbcType=TIMESTAMP}
    where ID = #{id,jdbcType=CHAR}
  </update>



	<!-- 自定义根据群组查询 -->
	<select id="selectUserByGroupId" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from UMS_GROUP_USER_REL
		where GROUP_ID = #{groupId,jdbcType=CHAR}
	</select>

<!-- 自定义根据群组查询userDesc -->
	<select id="selectUserDescByGroupId" resultType="java.lang.String"
		parameterType="java.lang.String">
		select
		USER_DESC
		from UMS_GROUP_USER_REL
		where GROUP_ID = #{groupId,jdbcType=CHAR}
	</select>

	<insert id="insert"
		parameterType="net.zoneland.ums.common.dal.dataobject.UmsGroupUserRel">
		insert into UMS_GROUP_USER_REL (ID, GROUP_ID, USER_DESC,
		COMMENTS, GMT_CREATED)
		values (#{id,jdbcType=CHAR}, #{groupId,jdbcType=CHAR},
		#{userDesc,jdbcType=CHAR},
		#{comments,jdbcType=CHAR}, #{gmtCreated,jdbcType=TIMESTAMP})
	</insert>

	<select id="getUserByName" resultMap="BaseResultMap" parameterType="java.lang.String">
	    select
	    <include refid="Base_Column_List" />
	    from UMS_GROUP_USER_REL
	    where COMMENTS   like '%'||#{name}||'%'
  	</select>


	<delete id="deleteByGroupId" parameterType="java.lang.String">
		delete from UMS_GROUP_USER_REL
		where GROUP_ID = #{groupId,jdbcType=CHAR}
	</delete>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from UMS_GROUP_USER_REL
		where ID = #{id,jdbcType=CHAR}
	</delete>

	<delete id="deleteByContactId" parameterType="java.util.Map">
		delete from UMS_GROUP_USER_REL
		<where>
		1=1
		<if test="groupIdList != null">
			AND
			<foreach item="item" index="index" collection="groupIdList"
				open="(" separator=" OR " close=")">
				GROUP_ID= #{item}
			</foreach>
		</if>
		<if test="userDesc != null">
			AND USER_DESC = #{userDesc,jdbcType=CHAR}
		</if>
	</where>
   </delete>
   <update id="updateByGroupIds" parameterType="java.util.Map">
	<if test="groupIdList != null">
		update UMS_GROUP_USER_REL
		<set>
			<if test="comments != null">
				COMMENTS = #{comments,jdbcType=CHAR}
			</if>
		</set>
		where
		<foreach item="item" index="index" collection="groupIdList"
			separator=" OR ">
			(GROUP_ID = #{item}
			<if test="userDesc != null">
				AND USER_DESC = #{userDesc,jdbcType=CHAR}
			</if>
			)
		</foreach>
	</if>
</update>
   
</mapper>